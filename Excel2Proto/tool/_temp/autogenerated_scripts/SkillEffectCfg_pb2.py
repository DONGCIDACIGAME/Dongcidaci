# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SkillEffectCfg.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14SkillEffectCfg.proto\x12\nDongciDaci\"\xaf\x01\n\x0cSkEftBaseCfg\x12\n\n\x02ID\x18\x01 \x01(\r\x12\x0e\n\x06\x43hName\x18\x02 \x01(\t\x12\x0e\n\x06\x45nName\x18\x03 \x01(\t\x12\x11\n\tClassName\x18\x04 \x01(\t\x12\x11\n\tChDescrip\x18\x05 \x01(\t\x12\x11\n\tEnDescrip\x18\x06 \x01(\t\x12\x10\n\x08IconPath\x18\x07 \x01(\t\x12\x15\n\rVFXPrefabPath\x18\x08 \x01(\t\x12\x11\n\tAudioPath\x18\t \x01(\t\"\xbd\x01\n\x13SkillEffectCfg_Data\x12R\n\x12SkEftBaseCfg_items\x18\x01 \x03(\x0b\x32\x36.DongciDaci.SkillEffectCfg_Data.SkEftBaseCfgItemsEntry\x1aR\n\x16SkEftBaseCfgItemsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\'\n\x05value\x18\x02 \x01(\x0b\x32\x18.DongciDaci.SkEftBaseCfg:\x02\x38\x01\x42#\n!com.trinitigames.server.conf.autob\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'SkillEffectCfg_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n!com.trinitigames.server.conf.auto'
  _SKILLEFFECTCFG_DATA_SKEFTBASECFGITEMSENTRY._options = None
  _SKILLEFFECTCFG_DATA_SKEFTBASECFGITEMSENTRY._serialized_options = b'8\001'
  _SKEFTBASECFG._serialized_start=37
  _SKEFTBASECFG._serialized_end=212
  _SKILLEFFECTCFG_DATA._serialized_start=215
  _SKILLEFFECTCFG_DATA._serialized_end=404
  _SKILLEFFECTCFG_DATA_SKEFTBASECFGITEMSENTRY._serialized_start=322
  _SKILLEFFECTCFG_DATA_SKEFTBASECFGITEMSENTRY._serialized_end=404
# @@protoc_insertion_point(module_scope)
